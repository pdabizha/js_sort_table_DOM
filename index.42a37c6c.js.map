{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCIA,AAFmB,SAAS,gBAAgB,CAAC,YAElC,OAAO,CAAC,SAAC,CAAA,CAAS,CAA7B,EACE,EAAQ,gBAAgB,CAAC,QAAS,eAGjB,EACX,EACA,EALkC,OAGvB,EAHiC,OAOlD,CAFM,EAAO,MAAM,IAAI,CAAC,CADlB,EAAY,SAAS,aAAa,CAAC,UACP,gBAAgB,CAAC,QAE9C,IAAI,CAAC,SAAC,CAAA,CAAM,CAAjB,MAUqB,EAAO,EAN1B,OAMmB,EATL,EAAK,KAAK,CAAC,EAAM,CAAC,WAAW,CAAC,IAAI,GAStB,EARZ,EAAK,KAAK,CAAC,EAAM,CAAC,WAAW,CAAC,IAAI,GASlD,AAAI,AAPiC,GAOxB,EACJ,EAAM,aAAa,CAAC,GAGzB,AAAU,IAXuB,EAe5B,AAHQ,CAAA,WAAW,EAAM,OAAO,CAAC,QAAS,MAAQ,CAAA,EAC1C,CAAA,WAAW,EAAM,OAAO,CAAC,QAAS,MAAQ,CAAA,EAKpD,WAAW,GAAS,WAAW,EAjBtC,GAEA,AAAA,EAAU,MAAM,CAAhB,KAAA,CAAA,E,A,S,C,E,G,M,O,C,G,O,E,E,EAAoB,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,EAAA,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,EAAA,I,A,W,M,A,U,wI,K,EAbtB","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar tableNames = document.querySelectorAll(\"thead th\");\ntableNames.forEach(function(element, index) {\n    element.addEventListener(\"click\", function() {\n        return sortTable(index);\n    });\n});\nfunction sortTable(index) {\n    var _tableBody;\n    var tableBody = document.querySelector(\"tbody\");\n    var rows = Array.from(tableBody.querySelectorAll(\"tr\"));\n    rows.sort(function(rowA, rowB) {\n        var cellA = rowA.cells[index].textContent.trim();\n        var cellB = rowB.cells[index].textContent.trim();\n        return compareValues(cellA, cellB, index);\n    });\n    (_tableBody = tableBody).append.apply(_tableBody, _to_consumable_array(rows));\n}\nfunction compareValues(cellA, cellB, index) {\n    if (index <= 1) return cellA.localeCompare(cellB);\n    if (index === 3) {\n        var valueA = parseFloat(cellA.replace(/[$,]/g, \"\")) || 0;\n        var valueB = parseFloat(cellB.replace(/[$,]/g, \"\")) || 0;\n        return valueA - valueB;\n    }\n    return parseFloat(cellA) - parseFloat(cellB);\n}\n\n//# sourceMappingURL=index.42a37c6c.js.map\n","'use strict';\n\nconst tableNames = document.querySelectorAll('thead th');\n\ntableNames.forEach((element, index) => {\n  element.addEventListener('click', () => sortTable(index));\n});\n\nfunction sortTable(index) {\n  const tableBody = document.querySelector('tbody');\n  const rows = Array.from(tableBody.querySelectorAll('tr'));\n\n  rows.sort((rowA, rowB) => {\n    const cellA = rowA.cells[index].textContent.trim();\n    const cellB = rowB.cells[index].textContent.trim();\n\n    return compareValues(cellA, cellB, index);\n  });\n\n  tableBody.append(...rows);\n}\n\nfunction compareValues(cellA, cellB, index) {\n  if (index <= 1) {\n    return cellA.localeCompare(cellB);\n  }\n\n  if (index === 3) {\n    const valueA = parseFloat(cellA.replace(/[$,]/g, '')) || 0;\n    const valueB = parseFloat(cellB.replace(/[$,]/g, '')) || 0;\n\n    return valueA - valueB;\n  }\n\n  return parseFloat(cellA) - parseFloat(cellB);\n}\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","tableNames","document","querySelectorAll","forEach","element","index","addEventListener","tableBody","rows","from","querySelector","sort","rowA","rowB","cellA","cellB","cells","textContent","trim","localeCompare","valueA","parseFloat","replace","append","apply","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError"],"version":3,"file":"index.42a37c6c.js.map"}